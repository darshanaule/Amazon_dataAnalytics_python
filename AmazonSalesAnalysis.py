# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17PeNEMpXXJDqYDTS6tMMV3KjjADsyKre
"""

import pandas as pd
import numpy as np
import matplotlib
from matplotlib import colors
import matplotlib.pyplot as plt
from matplotlib.colors import LinearSegmentedColormap
import seaborn as sns
import sqlite3
import csv

df=pd.read_csv('/content/Amazon Sales data.csv')

#print(df.info)
#converting the csv file to .db file and storing the data in sales_data.db
conn = sqlite3.connect('sales_db.db')
df.to_sql('sales_data',conn,if_exists='replace',index=False)

df.shape

df.size

df.columns

df.describe()

df.ndim

df.isnull().sum()

count_unique=df['Item Type'].value_counts()
print(count_unique)

df.duplicated()
df.drop_duplicates()

df['Order Date'] = pd.to_datetime(df['Order Date'])#will convert date column to datetime type
df['Ship Date'] = pd.to_datetime(df['Ship Date'])

#from this part we will find data insights

# Month-wise Sales Trend based on units sold
df_monthly = df.groupby(df['Order Date'].dt.month)['Units Sold'].sum()
plt.figure(figsize=(10,6))
#sns.lineplot(data=df_monthly)
df_monthly.plot(kind='bar')
plt.title('Month-wise Sales Trend')
plt.xlabel('Month')
plt.ylabel('Sales')

# Year-wise Sales Trend based on units sold
df_yearly = df.groupby(df['Order Date'].dt.year)['Units Sold'].sum()
plt.figure(figsize=(10,6))
#sns.lineplot(data=df_yearly)
df_yearly.plot(kind='bar')
plt.title('Year-wise Sales Trend')
plt.xlabel('Year')
plt.ylabel('Sales')

# Yearly Month-wise Sales Trend based on units sold
df_yearly_monthly = df.groupby([df['Order Date'].dt.year, df['Order Date'].dt.month])['Units Sold'].sum()
plt.figure(figsize=(12,8))
#sns.heatmap(df_yearly_monthly.unstack(), annot=True, cmap='Blues')
sns.lineplot(data=df_yearly_monthly.unstack())
plt.title('Yearly Month-wise Sales Trend')
plt.xlabel('Month')
plt.ylabel('Year')

#bar plot version of above line plot
df_yearly_monthly = df.groupby([df['Order Date'].dt.year, df['Order Date'].dt.month])['Units Sold'].sum()

plt.figure(figsize=(10,6))
df_yearly_monthly.unstack().plot(kind='bar')
plt.title('Yearly Month-wise Sales Trend')
plt.xlabel('Month')
plt.ylabel('Units Sold')
plt.legend(title='Year')
plt.show()

#creating a dataframe with numerical data only for heatmap
#num_data = df[[  'Order Date', 'Order ID', 'Ship Date', 'Units Sold', 'Unit Price',
 #      'Unit Cost', 'Total Revenue', 'Total Cost', 'Total Profit']]
#num_data.info()

#plt.figure(figsize=(16,9))
#heatmap = matplotlib.colors.LinearSegmentedColormap.from_list("", ["#ff0000", "#ffff00", "#00ff00", "#00ffff", "#0000ff"])
#sns.heatmap(num_data.corr(method='pearson'),annot=True,vmin=1,vmax=1,cmap=heatmap)

# month-wise revenue
df_yearly = df.groupby(df['Order Date'].dt.month)['Total Revenue'].sum()
plt.figure(figsize=(10,6))
#sns.lineplot(data=df_yearly)
df_yearly.plot(kind='bar')
plt.title('Month-wise Revenue Trend')
plt.xlabel('Month')
plt.ylabel('Revenue')

# Year-wise Revenue
df_yearly = df.groupby(df['Order Date'].dt.year)['Total Revenue'].sum()
plt.figure(figsize=(10,6))
#sns.lineplot(data=df_yearly)
df_yearly.plot(kind='bar')
plt.title('Year-wise Revenue Trend')
plt.xlabel('Year')
plt.ylabel('Revenue')

# Yearly-Month-wise Revenue
df_yearly_monthly = df.groupby([df['Order Date'].dt.year, df['Order Date'].dt.month])['Total Revenue'].sum()

plt.figure(figsize=(10,6))
df_yearly_monthly.unstack().plot(kind='bar')
plt.title('Yearly Month-wise Revenue Trend')
plt.xlabel('Month')
plt.ylabel('Revenue')
plt.legend(title='Year')
plt.show()

# month-wise profit
df_yearly = df.groupby(df['Order Date'].dt.month)['Total Profit'].sum()
plt.figure(figsize=(10,6))
#sns.lineplot(data=df_yearly)
df_yearly.plot(kind='bar')
plt.title('Month-wise Profit Trend')
plt.xlabel('Month')
plt.ylabel('Profit')

# Year-wise Profit
df_yearly = df.groupby(df['Order Date'].dt.year)['Total Profit'].sum()
plt.figure(figsize=(10,6))
#sns.lineplot(data=df_yearly)
df_yearly.plot(kind='bar')
plt.title('Year-wise Profit Trend')
plt.xlabel('Year')
plt.ylabel('Profit')

# Yearly-Month-wise Profit
df_yearly_monthly = df.groupby([df['Order Date'].dt.year, df['Order Date'].dt.month])['Total Profit'].sum()

plt.figure(figsize=(10,6))
df_yearly_monthly.unstack().plot(kind='bar')
plt.title('Yearly Month-wise Profit Trend')
plt.xlabel('Month')
plt.ylabel('Profit')
plt.legend(title='Year')
plt.show()

# Group by sales channel and year, and sum units sold # find how many units were sold offline and online and in which month
df_sales_channel_year = df.groupby([df['Order Date'].dt.month, 'Sales Channel'])['Units Sold'].sum().reset_index()

# Plot the results
plt.figure(figsize=(10,6))
sns.barplot(x='Sales Channel', y='Units Sold', hue='Order Date', data=df_sales_channel_year)
plt.title('Units Sold by Sales Channel and Month')
plt.show()

# Group by sales channel and year, and sum units sold # find how many units were sold offline and online and in which year
df_sales_channel_year = df.groupby([df['Order Date'].dt.year, 'Sales Channel'])['Units Sold'].sum().reset_index()

# Plot the results
plt.figure(figsize=(10,6))
sns.barplot(x='Sales Channel', y='Units Sold', hue='Order Date', data=df_sales_channel_year)
plt.title('Units Sold by Sales Channel and Year')
plt.show()

# Group by sales channel and year, and sum units sold # find how much revenue was generated through offline and online and in which month
df_revenue_year_channel = df.groupby([df['Order Date'].dt.month, 'Sales Channel'])['Total Revenue'].sum().reset_index()

# Plot the results
plt.figure(figsize=(10,6))
sns.barplot(x='Sales Channel', y='Total Revenue', hue='Order Date', data=df_revenue_year_channel)
plt.title('Total Revenue by Sales Channel and Month')
plt.show()

# Group by sales channel and year, and sum units sold # find how much revenue was generated through offline and online and in which year
df_revenue_year_channel = df.groupby([df['Order Date'].dt.year, 'Sales Channel'])['Total Revenue'].sum().reset_index()

# Plot the results
plt.figure(figsize=(10,6))
sns.barplot(x='Sales Channel', y='Total Revenue', hue='Order Date', data=df_revenue_year_channel)
plt.title('Total Revenue by Sales Channel and Year')
plt.show()

# Group by sales channel and year, and sum units sold # find how much profit was generated through offline and online and in which month
df_profit_year_channel = df.groupby([df['Order Date'].dt.month, 'Sales Channel'])['Total Profit'].sum().reset_index()

# Plot the results
plt.figure(figsize=(10,6))
sns.barplot(x='Sales Channel', y='Total Profit', hue='Order Date', data=df_profit_year_channel)
plt.title('Total Profit by Sales Channel and Month')
plt.show()

# Group by sales channel and year, and sum units sold # find how much profit was generated through offline and online and in which year
df_profit_year_channel = df.groupby([df['Order Date'].dt.year, 'Sales Channel'])['Total Profit'].sum().reset_index()

# Plot the results
plt.figure(figsize=(10,6))
sns.barplot(x='Sales Channel', y='Total Profit', hue='Order Date', data=df_profit_year_channel)
plt.title('Total Profit by Sales Channel and Month')
plt.show()

# profit country-wise
df_profit_country = df.groupby([df['Total Profit']])['Country'].sum().reset_index()

# Plot the results
plt.figure(figsize=(16,60))
sns.barplot(x='Total Profit', y='Country', data=df_profit_country)
plt.title('Total Profit from Country')
plt.show()

# profit Region-wise
df_profit_region = df.groupby([df['Region']])['Total Profit'].sum().reset_index()

# Plot the results
plt.figure(figsize=(20,6))
sns.barplot(x='Region', y='Total Profit', data=df_profit_region)
plt.title('Total Profit from Region')
plt.show()

# Profit fron a region and country
df_profit = df.groupby([df['Country'], 'Region'])['Total Profit'].sum().reset_index()

# Plot the results
plt.figure(figsize=(20,100))
sns.barplot(x='Total Profit', y='Country', hue='Region', data=df_profit)
plt.title('Total Profit from Country and Region')
plt.show()

# Revenue country-wise
df_revenue_country = df.groupby([df['Total Revenue']])['Country'].sum().reset_index()

# Plot the results
plt.figure(figsize=(16,60))
sns.barplot(x='Total Revenue', y='Country', data=df_revenue_country)
plt.title('Total Revenue from Country')
plt.show()

# Revenue region-wise

df_revenue_region = df.groupby([df['Region']])['Total Revenue'].sum().reset_index()

# Plot the results
plt.figure(figsize=(20,6))
sns.barplot(x='Region', y='Total Revenue', data=df_revenue_region)
plt.title('Total Revenue from Region')
plt.show()

# Revenue fron a region and country
df_profit_revenue = df.groupby([df['Country'], 'Region'])['Total Revenue'].sum().reset_index()

# Plot the results
plt.figure(figsize=(20,100))
sns.barplot(x='Total Revenue', y='Country', hue='Region', data=df_profit_revenue)
plt.title('Total Revenue in a Country and Region')
plt.show()